#用字典的方式列舉表格
action={ 0:{'id':'S5' , '+':'-1' , '*':'-1' , '(':'S4' , ')':'-1' , '$':'-1'}
       , 1:{'id':'-1' , '+':'S6' , '*':'-1' , '(':'-1' , ')':'-1' , '$':'accept'}
       , 2:{'id':'-1' , '+':'R2' , '*':'S7' , '(':'-1' , ')':'R2' , '$':'R2'}
       , 3:{'id':'-1' , '+':'R4' , '*':'R4' , '(':'-1' , ')':'R4' , '$':'R4'}
       , 4:{'id':'S5' , '+':'-1' , '*':'-1' , '(':'S4' , ')':'-1' , '$':'-1'}
       , 5:{'id':'-1' , '+':'R6' , '*':'R6' , '(':'-1' , ')':'R6' , '$':'R6'}
       , 6:{'id':'S5' , '+':'-1' , '*':'-1' , '(':'S4' , ')':'-1' , '$':'-1'}
       , 7:{'id':'S5' , '+':'-1' , '*':'-1' , '(':'S4' , ')':'-1' , '$':'-1'}
       , 8:{'id':'-1' , '+':'S6' , '*':'-1' , '(':'-1' , ')':'S11', '$':'-1'}
       , 9:{'id':'-1' , '+':'R1' , '*':'S7' , '(':'-1' , ')':'R1' , '$':'R1'}
       ,10:{'id':'-1' , '+':'R3' , '*':'R3' , '(':'-1' , ')':'R3' , '$':'R3'}
       ,11:{'id':'-1' , '+':'R5' , '*':'R5' , '(':'-1' , ')':'R5' , '$':'R5'}}
goto={ 0:{'E':1 , 'T':2 , 'F':3 }
     , 1:{'E':-1, 'T':-1, 'F':-1}
     , 2:{'E':-1, 'T':-1, 'F':-1}
     , 3:{'E':-1, 'T':-1, 'F':-1}
     , 4:{'E':8 , 'T':2 , 'F':3 }
     , 5:{'E':-1, 'T':-1, 'F':-1}
     , 6:{'E':-1, 'T':9 , 'F':3 }
     , 7:{'E':-1, 'T':-1, 'F':10}
     , 8:{'E':-1, 'T':-1, 'F':-1}
     , 9:{'E':-1, 'T':-1, 'F':-1}
     ,10:{'E':-1, 'T':-1, 'F':-1}
     ,11:{'E':-1, 'T':-1, 'F':-1}}
gram={ 1:'E E+T', 2:'E T', 3:'T T*F', 4:'T F', 5:'F (E)', 6:'F id' }

while True:
    try:
        #輸入待確定程式碼並轉成符號陣列
        z=input()
        text=[]
        n=0
        for i in range(len(z)):
            if(z[i]=='i'):
                text.append('id')
            elif(z[i]=='d' or z[i]==' '):
                continue
            else:
                text.append(z[i])
        if n!=0:
                continue
        text.append('$')

        #ss是狀態堆疊，sym是已看的符號
        ss=[0]
        sym=[]

        while(1):
            temp=action[ ss[-1] ][ text[0] ]
            if temp=='accept':
                print('Accept')
                break
            
            #把查詢到的狀態和目前看的符號個別推入堆疊中
            elif temp[0]=='S':
                ss.append( int(temp[1:]) )
                sym.append( text[0] )
                text.pop(0)
                
            '''找出目前需用的文法，先將跟文法右側同等數量的符號和狀態丟出堆疊，
                將符號加入堆疊後，透過前一狀態和推入的符號查詢目前狀態並推入堆疊'''
            elif temp[0]=='R':
                tm=gram[ int(temp[1]) ].split(' ')
                for i in range( len(tm[1]) ):
                    if(tm[1][i]=='i'):
                        continue
                    sym.pop()
                    ss.pop()
                sym.append(tm[0])
                if goto[ ss[-1] ][ sym[-1] ]==-1:
                    print('Error')
                    break
                ss.append( goto[ ss[-1] ][ sym[-1] ] )
            else:
                print('Error')
                break
    except EOFError:
        break
